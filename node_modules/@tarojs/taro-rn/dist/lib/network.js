import NetInfo from '@react-native-community/netinfo';
let unsubscribe = null;
export function getNetworkType(opts = {}) {
    const { success, fail, complete } = opts;
    const res = {};
    return new Promise((resolve, reject) => {
        NetInfo.fetch()
            .then((connectionInfo) => {
            res.networkType = connectionInfo.type;
            res.errMsg = 'getNetworkType:ok';
            success && success(res);
            complete && complete(res);
            resolve(res);
        }).catch((err) => {
            res.errMsg = err.message;
            fail && fail(res);
            complete && complete(res);
            reject(err);
        });
    });
}
export function onNetworkStatusChange(onNetworkStatusChange) {
    function changeCallback(connectionInfo) {
        const { type, isConnected } = connectionInfo;
        onNetworkStatusChange && onNetworkStatusChange({
            isConnected,
            networkType: type
        });
    }
    unsubscribe = NetInfo.addEventListener(changeCallback);
}
export function offNetworkStatusChange() {
    unsubscribe();
    unsubscribe = null;
}
//# sourceMappingURL=network.js.map